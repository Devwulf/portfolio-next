import type { GetStaticProps, InferGetStaticPropsType, NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import qs from "qs";
import { Parallax } from "@react-spring/parallax";
import Hero from "../components/hero";
import { useEffect, useState } from "react";
import Projects from "../components/projects";

const Home: NextPage<InferGetStaticPropsType<typeof getStaticProps>> = (
    props
) => {
    const { posts } = props;
    const [windowWidth, setWindowWidth] = useState(0);

    useEffect(() => {
        setWindowWidth(window.innerWidth);
        window.addEventListener("resize", () => {
            setWindowWidth(window.innerWidth);
        });
    }, []);
    return (
        <div className={styles.container}>
            <Head>
                <title>Create Next App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <Parallax
                pages={4}
                innerStyle={{
                    backgroundImage: "url(/starfield.png)",
                    backgroundAttachment: "scroll"
                }}
            >
                <Hero windowWidth={windowWidth} />
                <Projects windowWidth={windowWidth} />
            </Parallax>

            {/*
            <main className={styles.main}>
                <h1 className={styles.title}>
                    Welcome to <a href="https://nextjs.org">Next.js!</a>
                </h1>

                <p className={styles.description}>
                    Get started by editing{" "}
                    <code className={styles.code}>pages/index.tsx</code>
                </p>

                <div className={styles.grid}>
                    <a href="https://nextjs.org/docs" className={styles.card}>
                        <h2>Documentation &rarr;</h2>
                        <p>
                            Find in-depth information about Next.js features and
                            API.
                        </p>
                    </a>

                    <a href="https://nextjs.org/learn" className={styles.card}>
                        <h2>Learn &rarr;</h2>
                        <p>
                            Learn about Next.js in an interactive course with
                            quizzes!
                        </p>
                    </a>

                    <a
                        href="https://github.com/vercel/next.js/tree/canary/examples"
                        className={styles.card}
                    >
                        <h2>Examples &rarr;</h2>
                        <p>
                            Discover and deploy boilerplate example Next.js
                            projects.
                        </p>
                    </a>

                    <a
                        href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
                        className={styles.card}
                    >
                        <h2>Deploy &rarr;</h2>
                        <p>
                            Instantly deploy your Next.js site to a public URL
                            with Vercel.
                        </p>
                    </a>
                </div>
            </main>
            */}

            {/*
            <footer className={styles.footer}>
                <a
                    href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
                    target="_blank"
                    rel="noopener noreferrer"
                >
                    Powered by{" "}
                    <span className={styles.logo}>
                        <Image
                            src="/vercel.svg"
                            alt="Vercel Logo"
                            width={72}
                            height={16}
                        />
                    </span>
                </a>
            </footer>
            */}
        </div>
    );
};

export default Home;

type Author = {
    data: {
        id: number;
        attributes: {
            username: string;
            email: string;
            provider: string;
            comfirmed: boolean;
            blocked: boolean;
            createdAt: Date;
            updatedAt: Date;
        };
    };
};

type Post = {
    id: number;
    attributes: {
        title: string;
        slug: string;
        content: string;
        createdAt: Date;
        updatedAt: Date;
        publishedAt: Date;
        author: Author;
    };
};

export const getStaticProps: GetStaticProps<{
    posts: Post[];
}> = async (context) => {
    const query = qs.stringify(
        {
            populate: "author"
        },
        {
            encodeValuesOnly: true
        }
    );
    const res = await fetch("http://localhost:1337/api/posts");
    const json = await res.json();
    const posts: Post[] = json["data"] ?? [];

    return {
        props: {
            posts
        }
    };
};
